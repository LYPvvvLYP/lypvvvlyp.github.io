import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as e,d as r,o as l}from"./app-48rL9gLW.js";const n={};function i(c,t){return l(),a("div",null,t[0]||(t[0]=[e("p",null,"日志平台和 TraceID 是开发和监控应用程序时常用的工具。日志平台用于记录应用程序的运行状态和错误信息，而 TraceID 则是用于追踪请求的唯一标识符。通过 TraceID，开发者可以跟踪请求在不同服务和组件间的流动，从而更容易定位和解决问题。",-1),e("h2",{id:"spring-cloud-sleuth",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#spring-cloud-sleuth"},[e("span",null,"Spring Cloud Sleuth")])],-1),e("p",null,[r("在 Spring Cloud 中，分布式链路框架主要由 "),e("strong",null,"Spring Cloud Sleuth"),r(" 提供支持。Spring Cloud Sleuth 是一个用于 Spring Boot 应用的分布式追踪工具，它可以自动配置追踪功能，包括生成 TraceID 和 SpanID，以便跟踪请求在不同服务和组件间的流动。")],-1)]))}const s=o(n,[["render",i],["__file","Log-Platform-and-TraceID.html.vue"]]),u=JSON.parse('{"path":"/zh/Computer/Log-Platform-and-TraceID.html","title":"日志平台和TraceID","lang":"zh-CN","frontmatter":{"date":"2024-12-03T12:19:17.000Z","updated":"2024-12-06T13:03:53.000Z","title":"日志平台和TraceID","shortTitle":"日志平台和TraceID","description":"深入探讨日志平台架构与 TraceID 的应用，揭示分布式系统中的日志追踪、链路分析及故障排查的最佳实践，提升系统可观测性与运维效率。","category":["计算机"]Activiti介绍\\"博客文章写一个标题，要求语气亲切，写10个\\n为\\"Activiti介绍\\"博客文章写一个description，用于谷歌seo\\n你是一个资深架构员，请为\\"日志平台和TraceID\\"博客文章写一个description，描述中包含专业术语，用于谷歌seo，用中文，字数在150字符以内，语气专业且吸引人。\\n"},"headers":[{"level":2,"title":"Spring Cloud Sleuth","slug":"spring-cloud-sleuth","link":"#spring-cloud-sleuth","children":[]}],"git":{"createdTime":1733225961000,"updatedTime":1733463231000,"contributors":[{"name":"LYPvvvLYP","email":"1909266427@qq.com","commits":1}]},"readingTime":{"minutes":1.37,"words":412},"filePathRelative":"zh/Computer/Log Platform and TraceID.md","localizedDate":"2024年12月3日","excerpt":"<p>日志平台和 TraceID 是开发和监控应用程序时常用的工具。日志平台用于记录应用程序的运行状态和错误信息，而 TraceID 则是用于追踪请求的唯一标识符。通过 TraceID，开发者可以跟踪请求在不同服务和组件间的流动，从而更容易定位和解决问题。</p>\\n<h2>Spring Cloud Sleuth</h2>\\n<p>在 Spring Cloud 中，分布式链路框架主要由 <strong>Spring Cloud Sleuth</strong> 提供支持。Spring Cloud Sleuth 是一个用于 Spring Boot 应用的分布式追踪工具，它可以自动配置追踪功能，包括生成 TraceID 和 SpanID，以便跟踪请求在不同服务和组件间的流动。</p>"}');export{s as comp,u as data};
