import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a,o as s}from"./app-48rL9gLW.js";const t={};function i(r,e){return s(),n("div",null,e[0]||(e[0]=[a('<h3 id="what-is-azure-cosmos-db-change-feed" tabindex="-1"><a class="header-anchor" href="#what-is-azure-cosmos-db-change-feed"><span>What is Azure Cosmos DB Change Feed?</span></a></h3><p>Azure Cosmos DB Change Feed is a persistent record used to track all changes occurring in a container. Change Feed supports listening to any changes in a container within Azure Cosmos DB and outputs a list of documents arranged in order of modification. These changes can be processed asynchronously and incrementally, and the output can be distributed to one or more consumers for parallel processing.</p><h3 id="functions-of-change-feed" tabindex="-1"><a class="header-anchor" href="#functions-of-change-feed"><span>Functions of Change Feed</span></a></h3><ol><li><strong>Real-time Data Processing</strong>: Change Feed can be used for real-time data processing, such as real-time analysis of operational data in Internet of Things (IoT) applications.</li><li><strong>Event-driven Computing</strong>: Change Feed can be used to trigger notifications or invoke APIs when data changes occur in the container.</li><li><strong>Data Synchronization</strong>: Change Feed can be used to synchronize data to caches, search engines, data warehouses, or cold storage.</li><li><strong>Data Migration</strong>: Change Feed can be used to migrate data from the production environment to other systems.</li></ol><h3 id="how-to-use-change-feed" tabindex="-1"><a class="header-anchor" href="#how-to-use-change-feed"><span>How to Use Change Feed</span></a></h3><ol><li><strong>Connecting to Change Feed</strong>: You can connect to Change Feed using the Azure Cosmos DB SDK to fetch changes in the container.</li><li><strong>Configuring Change Feed Modes</strong>: Azure Cosmos DB provides two Change Feed modes: Latest Version Mode and All Versions and Deletes Mode (preview). You can choose the appropriate mode based on your needs.</li><li><strong>Processing Changes</strong>: You can use Azure Functions or Change Feed Processor to handle changes, automatically retrieve changes in the container, and perform corresponding operations.</li></ol>',6)]))}const h=o(t,[["render",i],["__file","Cosmos-DB-Change-Feed.html.vue"]]),g=JSON.parse('{"path":"/Computer/Cosmos-DB/Cosmos-DB-Change-Feed.html","title":"A comprehensive analysis of Azure Cosmos DB Change Feed: A guide to real-time data processing and event-driven computing","lang":"en-US","frontmatter":{"date":"2024-11-24T15:33:28.000Z","updated":"2024-11-24T15:42:17.000Z","title":"A comprehensive analysis of Azure Cosmos DB Change Feed: A guide to real-time data processing and event-driven computing","shortTitle":"Cosmos Db Change Feed","description":"Explore the power of Azure Cosmos DB Change Feed, with detailed installation steps and usage guides, to achieve real-time data processing and event-driven computing, improve application performance and responsiveness","category":["Computer"],"tag":["Cosmos DB"]},"headers":[{"level":3,"title":"What is Azure Cosmos DB Change Feed?","slug":"what-is-azure-cosmos-db-change-feed","link":"#what-is-azure-cosmos-db-change-feed","children":[]},{"level":3,"title":"Functions of Change Feed","slug":"functions-of-change-feed","link":"#functions-of-change-feed","children":[]},{"level":3,"title":"How to Use Change Feed","slug":"how-to-use-change-feed","link":"#how-to-use-change-feed","children":[]}],"git":{"createdTime":1732437548000,"updatedTime":1732888429000,"contributors":[{"name":"LYPvvvLYP","email":"1909266427@qq.com","commits":1}]},"readingTime":{"minutes":1.4,"words":419},"filePathRelative":"Computer/Cosmos DB/Cosmos DB Change Feed.md","localizedDate":"November 24, 2024","excerpt":"<h3>What is Azure Cosmos DB Change Feed?</h3>\\n<p>Azure Cosmos DB Change Feed is a persistent record used to track all changes occurring in a container. Change Feed supports listening to any changes in a container within Azure Cosmos DB and outputs a list of documents arranged in order of modification. These changes can be processed asynchronously and incrementally, and the output can be distributed to one or more consumers for parallel processing.</p>"}');export{h as comp,g as data};
