import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as n,o as i}from"./app-48rL9gLW.js";const r={};function s(a,e){return i(),o("div",null,e[0]||(e[0]=[n('<p>The <code>type</code> field indicates the table join type selected by MySQL, which refers to the method of scanning the table during query execution. The join types, ranked from best to worst, are: <code>system</code>, <code>const</code>, <code>eq_ref</code>, <code>ref</code>, <code>range</code>, <code>index</code>, <code>ALL</code>. Here is a detailed introduction to each type:</p><h2 id="system" tabindex="-1"><a class="header-anchor" href="#system"><span><code>system</code></span></a></h2><p><strong>Description</strong>: Indicates that the table has only one row (equivalent to a system table). This is one of the best join types because it means the table is very small, requiring almost no scanning.</p><p><strong>Example</strong>: Suitable for querying static configuration or dictionary tables.</p><h2 id="const" tabindex="-1"><a class="header-anchor" href="#const"><span><code>const</code></span></a></h2><p><strong>Description</strong>: Indicates that the table has at most one matching row, typically used for primary key or unique index queries. This join type is very efficient.</p><p><strong>Example</strong>: <code>SELECT * FROM users WHERE id = 1;</code></p><h2 id="eq-ref" tabindex="-1"><a class="header-anchor" href="#eq-ref"><span><code>eq_ref</code></span></a></h2><p><strong>Description</strong>: For each row from the previous table, MySQL reads a row from the current table. Typically used in join queries involving a primary key or unique index.</p><p><strong>Example</strong>: <code>SELECT * FROM orders JOIN customers ON orders.customer_id = customers.id;</code></p><h2 id="ref" tabindex="-1"><a class="header-anchor" href="#ref"><span><code>ref</code></span></a></h2><p><strong>Description</strong>: Indicates an index lookup for each row from the previous table. Suitable for queries using non-unique indexes or prefix indexes.</p><p><strong>Example</strong>: <code>SELECT * FROM orders WHERE customer_id = 1;</code></p><h2 id="range" tabindex="-1"><a class="header-anchor" href="#range"><span><code>range</code></span></a></h2><p><strong>Description</strong>: Retrieves rows only within a given range, using an index to select rows. This method is more efficient than a full table scan but less so than <code>ref</code>.</p><p><strong>Example</strong>: <code>SELECT * FROM orders WHERE order_date BETWEEN &#39;2022-01-01&#39; AND &#39;2022-12-31&#39;;</code></p><h2 id="index" tabindex="-1"><a class="header-anchor" href="#index"><span><code>index</code></span></a></h2><p><strong>Description</strong>: A full index scan, traversing the entire index tree without accessing the table. Typically faster than a full table scan (<code>ALL</code>), but still potentially very resource-intensive.</p><p><strong>Example</strong>: <code>SELECT id FROM orders;</code></p><h2 id="all" tabindex="-1"><a class="header-anchor" href="#all"><span><code>ALL</code></span></a></h2><p><strong>Description</strong>: A full table scan, which is the worst join type. MySQL must check every row in the table to find the matching records.</p><p><strong>Example</strong>: <code>SELECT * FROM orders;</code></p>',22)]))}const l=t(r,[["render",s],["__file","MySQL-explain.html.vue"]]),p=JSON.parse('{"path":"/Computer/MySQL/MySQL-explain.html","title":"MySQL explain","lang":"en-US","frontmatter":{"date":"2024-12-03T17:57:37.000Z","updated":"2024-12-05T21:09:21.000Z","title":"MySQL explain","shortTitle":"MySQL explain","description":"In-depth analysis of MySQL EXPLAIN statements, understanding of key technologies for query optimization and performance tuning, helping you master query execution plan analysis, improve database efficiency, and optimize big data processing capabilities.","category":["Computer"],"tag":["MySQL"]Activiti介绍\\"博客文章写一个标题，要求语气亲切，写10个\\n你是一个mysql专家，请为\\"MySQL explain语句\\"博客文章写一个description，描述中包含专业术语，用于谷歌seo，用中文，字数在150字符以内，语气专业且吸引人。\\n"},"headers":[{"level":2,"title":"system","slug":"system","link":"#system","children":[]},{"level":2,"title":"const","slug":"const","link":"#const","children":[]},{"level":2,"title":"eq_ref","slug":"eq-ref","link":"#eq-ref","children":[]},{"level":2,"title":"ref","slug":"ref","link":"#ref","children":[]},{"level":2,"title":"range","slug":"range","link":"#range","children":[]},{"level":2,"title":"index","slug":"index","link":"#index","children":[]},{"level":2,"title":"ALL","slug":"all","link":"#all","children":[]}],"git":{"createdTime":1733409411000,"updatedTime":1733409411000,"contributors":[{"name":"LYPvvvLYP","email":"1909266427@qq.com","commits":1}]},"readingTime":{"minutes":1.56,"words":467},"filePathRelative":"Computer/MySQL/MySQL explain.md","localizedDate":"December 4, 2024","excerpt":"<p>The <code>type</code> field indicates the table join type selected by MySQL, which refers to the method of scanning the table during query execution. The join types, ranked from best to worst, are: <code>system</code>, <code>const</code>, <code>eq_ref</code>, <code>ref</code>, <code>range</code>, <code>index</code>, <code>ALL</code>. Here is a detailed introduction to each type:</p>"}');export{l as comp,p as data};
